{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ansh Garg\\\\Downloads\\\\skincare project\\\\skincare\\\\frontend\\\\src\\\\views\\\\RoutineBuilder.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Box, Typography, Grid, Card, CardContent, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, TextField, Chip, Paper, List, ListItem, ListItemText, ListItemSecondaryAction, Switch, FormControlLabel, Select, MenuItem, InputLabel, FormControl } from '@mui/material';\nimport { Add, Delete, Edit, AccessTime, CheckCircle, Cancel, Favorite, Notifications } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RoutineBuilder = () => {\n  _s();\n\n  const [routines, setRoutines] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [openProductDialog, setOpenProductDialog] = useState(false);\n  const [openRoutineDialog, setOpenRoutineDialog] = useState(false);\n  const [currentProduct, setCurrentProduct] = useState({\n    name: '',\n    category: '',\n    frequency: 'daily',\n    timeOfDay: 'morning',\n    status: 'tried',\n    reminder: false\n  });\n  const [currentRoutine, setCurrentRoutine] = useState({\n    name: '',\n    products: [],\n    schedule: []\n  });\n\n  const handleAddProduct = () => {\n    if (currentProduct.name && currentProduct.category) {\n      setProducts(prev => [...prev, { ...currentProduct,\n        id: Date.now()\n      }]);\n      setCurrentProduct({\n        name: '',\n        category: '',\n        frequency: 'daily',\n        timeOfDay: 'morning',\n        status: 'tried',\n        reminder: false\n      });\n      setOpenProductDialog(false);\n    }\n  };\n\n  const handleAddRoutine = () => {\n    if (currentRoutine.name && currentRoutine.products.length > 0) {\n      setRoutines(prev => [...prev, { ...currentRoutine,\n        id: Date.now()\n      }]);\n      setCurrentRoutine({\n        name: '',\n        products: [],\n        schedule: []\n      });\n      setOpenRoutineDialog(false);\n    }\n  };\n\n  const getStatusColor = status => {\n    switch (status) {\n      case 'liked':\n        return 'success';\n\n      case 'avoid':\n        return 'error';\n\n      default:\n        return 'default';\n    }\n  };\n\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'liked':\n        return /*#__PURE__*/_jsxDEV(Favorite, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 28\n        }, this);\n\n      case 'avoid':\n        return /*#__PURE__*/_jsxDEV(Cancel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 28\n        }, this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 23\n        }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"fade-in\",\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Routine Builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      color: \"text.secondary\",\n      paragraph: true,\n      children: \"Create and manage your personalized skincare routine\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"hover-card\",\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Your Products\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                startIcon: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 30\n                }, this),\n                onClick: () => setOpenProductDialog(true),\n                children: \"Add Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              children: products.map(product => /*#__PURE__*/_jsxDEV(ListItem, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: product.name,\n                  secondary: `${product.category} • ${product.frequency} • ${product.timeOfDay}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                  children: [/*#__PURE__*/_jsxDEV(Chip, {\n                    icon: getStatusIcon(product.status),\n                    label: product.status,\n                    color: getStatusColor(product.status),\n                    size: \"small\",\n                    sx: {\n                      mr: 1\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    edge: \"end\",\n                    onClick: () => {},\n                    children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 21\n                }, this)]\n              }, product.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"hover-card\",\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Your Routines\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                startIcon: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 30\n                }, this),\n                onClick: () => setOpenRoutineDialog(true),\n                children: \"Create Routine\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              children: routines.map(routine => /*#__PURE__*/_jsxDEV(ListItem, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: routine.name,\n                  secondary: `${routine.products.length} products • ${routine.schedule.length} scheduled times`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    edge: \"end\",\n                    onClick: () => {},\n                    children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 21\n                }, this)]\n              }, routine.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openProductDialog,\n      onClose: () => setOpenProductDialog(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add New Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Product Name\",\n            value: currentProduct.name,\n            onChange: e => setCurrentProduct(prev => ({ ...prev,\n              name: e.target.value\n            })),\n            fullWidth: true,\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Category\",\n            value: currentProduct.category,\n            onChange: e => setCurrentProduct(prev => ({ ...prev,\n              category: e.target.value\n            })),\n            fullWidth: true,\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Frequency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: currentProduct.frequency,\n              onChange: e => setCurrentProduct(prev => ({ ...prev,\n                frequency: e.target.value\n              })),\n              label: \"Frequency\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"daily\",\n                children: \"Daily\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"weekly\",\n                children: \"Weekly\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"biweekly\",\n                children: \"Bi-weekly\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"monthly\",\n                children: \"Monthly\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Time of Day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: currentProduct.timeOfDay,\n              onChange: e => setCurrentProduct(prev => ({ ...prev,\n                timeOfDay: e.target.value\n              })),\n              label: \"Time of Day\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"morning\",\n                children: \"Morning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"evening\",\n                children: \"Evening\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"both\",\n                children: \"Both\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: currentProduct.status,\n              onChange: e => setCurrentProduct(prev => ({ ...prev,\n                status: e.target.value\n              })),\n              label: \"Status\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"tried\",\n                children: \"Tried\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"liked\",\n                children: \"Liked\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"avoid\",\n                children: \"Avoid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              checked: currentProduct.reminder,\n              onChange: e => setCurrentProduct(prev => ({ ...prev,\n                reminder: e.target.checked\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this),\n            label: \"Set Reminder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpenProductDialog(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAddProduct,\n          variant: \"contained\",\n          children: \"Add Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openRoutineDialog,\n      onClose: () => setOpenRoutineDialog(false),\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Create New Routine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Routine Name\",\n            value: currentRoutine.name,\n            onChange: e => setCurrentRoutine(prev => ({ ...prev,\n              name: e.target.value\n            })),\n            fullWidth: true,\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: \"Select Products\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: products.map(product => /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Switch, {\n                  checked: currentRoutine.products.includes(product.id),\n                  onChange: e => {\n                    const newProducts = e.target.checked ? [...currentRoutine.products, product.id] : currentRoutine.products.filter(id => id !== product.id);\n                    setCurrentRoutine(prev => ({ ...prev,\n                      products: newProducts\n                    }));\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 23\n                }, this),\n                label: product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this)\n            }, product.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpenRoutineDialog(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAddRoutine,\n          variant: \"contained\",\n          children: \"Create Routine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RoutineBuilder, \"1rYay9m5ny3l48TwRTKNkQiTWCI=\");\n\n_c = RoutineBuilder;\nexport default RoutineBuilder;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoutineBuilder\");","map":{"version":3,"sources":["C:/Users/Ansh Garg/Downloads/skincare project/skincare/frontend/src/views/RoutineBuilder.jsx"],"names":["React","useState","Box","Typography","Grid","Card","CardContent","Button","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Chip","Paper","List","ListItem","ListItemText","ListItemSecondaryAction","Switch","FormControlLabel","Select","MenuItem","InputLabel","FormControl","Add","Delete","Edit","AccessTime","CheckCircle","Cancel","Favorite","Notifications","RoutineBuilder","routines","setRoutines","products","setProducts","openProductDialog","setOpenProductDialog","openRoutineDialog","setOpenRoutineDialog","currentProduct","setCurrentProduct","name","category","frequency","timeOfDay","status","reminder","currentRoutine","setCurrentRoutine","schedule","handleAddProduct","prev","id","Date","now","handleAddRoutine","length","getStatusColor","getStatusIcon","p","display","justifyContent","alignItems","mb","map","product","mr","routine","mt","e","target","value","checked","includes","newProducts","filter"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Chip,\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Switch,\r\n  FormControlLabel,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  FormControl,\r\n} from '@mui/material';\r\nimport {\r\n  Add,\r\n  Delete,\r\n  Edit,\r\n  AccessTime,\r\n  CheckCircle,\r\n  Cancel,\r\n  Favorite,\r\n  Notifications,\r\n} from '@mui/icons-material';\r\n\r\nconst RoutineBuilder = () => {\r\n  const [routines, setRoutines] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [openProductDialog, setOpenProductDialog] = useState(false);\r\n  const [openRoutineDialog, setOpenRoutineDialog] = useState(false);\r\n  const [currentProduct, setCurrentProduct] = useState({\r\n    name: '',\r\n    category: '',\r\n    frequency: 'daily',\r\n    timeOfDay: 'morning',\r\n    status: 'tried',\r\n    reminder: false,\r\n  });\r\n  const [currentRoutine, setCurrentRoutine] = useState({\r\n    name: '',\r\n    products: [],\r\n    schedule: [],\r\n  });\r\n\r\n  const handleAddProduct = () => {\r\n    if (currentProduct.name && currentProduct.category) {\r\n      setProducts(prev => [...prev, { ...currentProduct, id: Date.now() }]);\r\n      setCurrentProduct({\r\n        name: '',\r\n        category: '',\r\n        frequency: 'daily',\r\n        timeOfDay: 'morning',\r\n        status: 'tried',\r\n        reminder: false,\r\n      });\r\n      setOpenProductDialog(false);\r\n    }\r\n  };\r\n\r\n  const handleAddRoutine = () => {\r\n    if (currentRoutine.name && currentRoutine.products.length > 0) {\r\n      setRoutines(prev => [...prev, { ...currentRoutine, id: Date.now() }]);\r\n      setCurrentRoutine({\r\n        name: '',\r\n        products: [],\r\n        schedule: [],\r\n      });\r\n      setOpenRoutineDialog(false);\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'liked': return 'success';\r\n      case 'avoid': return 'error';\r\n      default: return 'default';\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status) => {\r\n    switch (status) {\r\n      case 'liked': return <Favorite />;\r\n      case 'avoid': return <Cancel />;\r\n      default: return <CheckCircle />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box className=\"fade-in\" sx={{ p: 3 }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Routine Builder\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" color=\"text.secondary\" paragraph>\r\n        Create and manage your personalized skincare routine\r\n      </Typography>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <Card className=\"hover-card\">\r\n            <CardContent>\r\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n                <Typography variant=\"h6\">Your Products</Typography>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  startIcon={<Add />}\r\n                  onClick={() => setOpenProductDialog(true)}\r\n                >\r\n                  Add Product\r\n                </Button>\r\n              </Box>\r\n              <List>\r\n                {products.map((product) => (\r\n                  <ListItem key={product.id}>\r\n                    <ListItemText\r\n                      primary={product.name}\r\n                      secondary={`${product.category} • ${product.frequency} • ${product.timeOfDay}`}\r\n                    />\r\n                    <ListItemSecondaryAction>\r\n                      <Chip\r\n                        icon={getStatusIcon(product.status)}\r\n                        label={product.status}\r\n                        color={getStatusColor(product.status)}\r\n                        size=\"small\"\r\n                        sx={{ mr: 1 }}\r\n                      />\r\n                      <IconButton edge=\"end\" onClick={() => {}}>\r\n                        <Edit />\r\n                      </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6}>\r\n          <Card className=\"hover-card\">\r\n            <CardContent>\r\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n                <Typography variant=\"h6\">Your Routines</Typography>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  startIcon={<Add />}\r\n                  onClick={() => setOpenRoutineDialog(true)}\r\n                >\r\n                  Create Routine\r\n                </Button>\r\n              </Box>\r\n              <List>\r\n                {routines.map((routine) => (\r\n                  <ListItem key={routine.id}>\r\n                    <ListItemText\r\n                      primary={routine.name}\r\n                      secondary={`${routine.products.length} products • ${routine.schedule.length} scheduled times`}\r\n                    />\r\n                    <ListItemSecondaryAction>\r\n                      <IconButton edge=\"end\" onClick={() => {}}>\r\n                        <Edit />\r\n                      </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Add Product Dialog */}\r\n      <Dialog open={openProductDialog} onClose={() => setOpenProductDialog(false)}>\r\n        <DialogTitle>Add New Product</DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ mt: 2 }}>\r\n            <TextField\r\n              label=\"Product Name\"\r\n              value={currentProduct.name}\r\n              onChange={(e) => setCurrentProduct(prev => ({ ...prev, name: e.target.value }))}\r\n              fullWidth\r\n              sx={{ mb: 2 }}\r\n            />\r\n            <TextField\r\n              label=\"Category\"\r\n              value={currentProduct.category}\r\n              onChange={(e) => setCurrentProduct(prev => ({ ...prev, category: e.target.value }))}\r\n              fullWidth\r\n              sx={{ mb: 2 }}\r\n            />\r\n            <FormControl fullWidth sx={{ mb: 2 }}>\r\n              <InputLabel>Frequency</InputLabel>\r\n              <Select\r\n                value={currentProduct.frequency}\r\n                onChange={(e) => setCurrentProduct(prev => ({ ...prev, frequency: e.target.value }))}\r\n                label=\"Frequency\"\r\n              >\r\n                <MenuItem value=\"daily\">Daily</MenuItem>\r\n                <MenuItem value=\"weekly\">Weekly</MenuItem>\r\n                <MenuItem value=\"biweekly\">Bi-weekly</MenuItem>\r\n                <MenuItem value=\"monthly\">Monthly</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl fullWidth sx={{ mb: 2 }}>\r\n              <InputLabel>Time of Day</InputLabel>\r\n              <Select\r\n                value={currentProduct.timeOfDay}\r\n                onChange={(e) => setCurrentProduct(prev => ({ ...prev, timeOfDay: e.target.value }))}\r\n                label=\"Time of Day\"\r\n              >\r\n                <MenuItem value=\"morning\">Morning</MenuItem>\r\n                <MenuItem value=\"evening\">Evening</MenuItem>\r\n                <MenuItem value=\"both\">Both</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl fullWidth sx={{ mb: 2 }}>\r\n              <InputLabel>Status</InputLabel>\r\n              <Select\r\n                value={currentProduct.status}\r\n                onChange={(e) => setCurrentProduct(prev => ({ ...prev, status: e.target.value }))}\r\n                label=\"Status\"\r\n              >\r\n                <MenuItem value=\"tried\">Tried</MenuItem>\r\n                <MenuItem value=\"liked\">Liked</MenuItem>\r\n                <MenuItem value=\"avoid\">Avoid</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={currentProduct.reminder}\r\n                  onChange={(e) => setCurrentProduct(prev => ({ ...prev, reminder: e.target.checked }))}\r\n                />\r\n              }\r\n              label=\"Set Reminder\"\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenProductDialog(false)}>Cancel</Button>\r\n          <Button onClick={handleAddProduct} variant=\"contained\">\r\n            Add Product\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Create Routine Dialog */}\r\n      <Dialog open={openRoutineDialog} onClose={() => setOpenRoutineDialog(false)} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>Create New Routine</DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ mt: 2 }}>\r\n            <TextField\r\n              label=\"Routine Name\"\r\n              value={currentRoutine.name}\r\n              onChange={(e) => setCurrentRoutine(prev => ({ ...prev, name: e.target.value }))}\r\n              fullWidth\r\n              sx={{ mb: 2 }}\r\n            />\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              Select Products\r\n            </Typography>\r\n            <List>\r\n              {products.map((product) => (\r\n                <ListItem key={product.id}>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        checked={currentRoutine.products.includes(product.id)}\r\n                        onChange={(e) => {\r\n                          const newProducts = e.target.checked\r\n                            ? [...currentRoutine.products, product.id]\r\n                            : currentRoutine.products.filter(id => id !== product.id);\r\n                          setCurrentRoutine(prev => ({ ...prev, products: newProducts }));\r\n                        }}\r\n                      />\r\n                    }\r\n                    label={product.name}\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenRoutineDialog(false)}>Cancel</Button>\r\n          <Button onClick={handleAddRoutine} variant=\"contained\">\r\n            Create Routine\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default RoutineBuilder; "]},"metadata":{},"sourceType":"module"}