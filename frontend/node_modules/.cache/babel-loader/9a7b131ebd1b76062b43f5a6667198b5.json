{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ansh Garg\\\\Downloads\\\\skincare project\\\\skincare\\\\frontend\\\\src\\\\views\\\\FaceDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport { putForm } from '../controllers/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst allFeatures = [\"normal\", \"dry\", \"oily\", \"combination\", \"acne\", \"sensitive\", \"fine lines\", \"wrinkles\", \"redness\", \"dull\", \"pore\", \"pigmentation\", \"blackheads\", \"whiteheads\", \"blemishes\", \"dark circles\", \"eye bags\", \"dark spots\"];\n\nconst FaceDetails = () => {\n  _s();\n\n  const {\n    state\n  } = useLocation();\n  const navigate = useNavigate();\n  const data = (state === null || state === void 0 ? void 0 : state.data) || {}; // Build features vector for recommendations\n\n  const features = {};\n  allFeatures.forEach(f => {\n    features[f] = 0;\n  });\n\n  if (data.type && features.hasOwnProperty(data.type.toLowerCase())) {\n    features[data.type.toLowerCase()] = 1;\n  }\n\n  if (data.acne !== \"Low\") features[\"acne\"] = 1;\n\n  const handleRecommend = () => {\n    putForm(features, data.type, data.tone, navigate);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      mt: 6\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Face Analysis Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: {\n        mb: 2\n      },\n      children: data.type && data.tone && data.acne ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Your skin type is \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: data.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 31\n        }, this), \".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 50\n        }, this), \"Your skin tone is \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: data.tone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 31\n        }, this), \".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 50\n        }, this), \"Acne severity detected: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: data.acne\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 37\n        }, this), \".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 56\n        }, this)]\n      }, void 0, true) : \"Could not detect all face details.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleRecommend,\n      children: \"Get Recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FaceDetails, \"swtv2cUIBi1p5TRCrVajRailzpM=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = FaceDetails;\nexport default FaceDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"FaceDetails\");","map":{"version":3,"sources":["C:/Users/Ansh Garg/Downloads/skincare project/skincare/frontend/src/views/FaceDetails.jsx"],"names":["React","useLocation","useNavigate","Button","Container","Typography","putForm","allFeatures","FaceDetails","state","navigate","data","features","forEach","f","type","hasOwnProperty","toLowerCase","acne","handleRecommend","tone","mt","mb"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport Button from '@mui/material/Button';\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { putForm } from '../controllers/actions';\r\n\r\nconst allFeatures = [\r\n  \"normal\", \"dry\", \"oily\", \"combination\", \"acne\", \"sensitive\", \"fine lines\", \"wrinkles\", \"redness\",\r\n  \"dull\", \"pore\", \"pigmentation\", \"blackheads\", \"whiteheads\", \"blemishes\", \"dark circles\", \"eye bags\", \"dark spots\"\r\n];\r\n\r\nconst FaceDetails = () => {\r\n  const { state } = useLocation();\r\n  const navigate = useNavigate();\r\n  const data = state?.data || {};\r\n\r\n  // Build features vector for recommendations\r\n  const features = {};\r\n  allFeatures.forEach(f => { features[f] = 0; });\r\n  if (data.type && features.hasOwnProperty(data.type.toLowerCase())) {\r\n    features[data.type.toLowerCase()] = 1;\r\n  }\r\n  if (data.acne !== \"Low\") features[\"acne\"] = 1;\r\n\r\n  const handleRecommend = () => {\r\n    putForm(features, data.type, data.tone, navigate);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" sx={{ mt: 6 }}>\r\n      <Typography variant=\"h4\" gutterBottom>Face Analysis Results</Typography>\r\n      <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n        {data.type && data.tone && data.acne ? (\r\n          <>\r\n            Your skin type is <b>{data.type}</b>.<br/>\r\n            Your skin tone is <b>{data.tone}</b>.<br/>\r\n            Acne severity detected: <b>{data.acne}</b>.<br/>\r\n          </>\r\n        ) : (\r\n          \"Could not detect all face details.\"\r\n        )}\r\n      </Typography>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleRecommend}>\r\n        Get Recommendations\r\n      </Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FaceDetails; "]},"metadata":{},"sourceType":"module"}