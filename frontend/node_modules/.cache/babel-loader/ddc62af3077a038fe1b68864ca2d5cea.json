{"ast":null,"code":"export const UploadImage = (imageSrc, navigate) => {\n  fetch(\"/upload\", {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      file: imageSrc\n    })\n  }).then(res => res.json()).then(data => {\n    if (data.error) {\n      console.log(\"Please add a photograph\");\n    } else {\n      // Immediately fetch recommendations with detected values\n      const features = {};\n      features[data.type.toLowerCase()] = 1;\n      if (data.acne !== \"Low\") features[\"acne\"] = 1;\n      [\"normal\", \"dry\", \"oily\", \"combination\", \"sensitive\", \"fine lines\", \"wrinkles\", \"redness\", \"dull\", \"pore\", \"pigmentation\", \"blackheads\", \"whiteheads\", \"blemishes\", \"dark circles\", \"eye bags\", \"dark spots\"].forEach(f => {\n        if (!features[f]) features[f] = 0;\n      });\n      fetch(\"/recommend\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          features: features,\n          type: data.type,\n          tone: data.tone\n        })\n      }).then(res => res.json()).then(recData => {\n        navigate(\"/recs\", {\n          state: {\n            data: recData\n          }\n        });\n      });\n    }\n  }).catch(err => {\n    console.log(err.message);\n  });\n};\n_c = UploadImage;\nexport const putForm = (features, currType, currTone, navigate) => {\n  console.log(features, currType, currTone, navigate);\n  fetch(\"/recommend\", {\n    method: \"put\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      features: features,\n      type: currType,\n      tone: currTone\n    })\n  }).then(res => res.json()).then(data => {\n    if (data.error) {\n      console.log(\"Error\");\n    } else {\n      navigate(\"/recs\", {\n        state: {\n          data\n        }\n      });\n      console.log(data);\n    }\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"sources":["C:/Users/Ansh Garg/Downloads/skincare project/skincare/frontend/src/controllers/actions.js"],"names":["UploadImage","imageSrc","navigate","fetch","method","headers","body","JSON","stringify","file","then","res","json","data","error","console","log","features","type","toLowerCase","acne","forEach","f","tone","recData","state","catch","err","message","putForm","currType","currTone"],"mappings":"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","sourcesContent":["export const UploadImage = (imageSrc, navigate) => {\n  fetch(\"/upload\", {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ file: imageSrc }),\n  })\n    .then((res) => res.json())\n    .then((data) => {\n      if (data.error) {\n        console.log(\"Please add a photograph\");\n      } else {\n        // Immediately fetch recommendations with detected values\n        const features = {};\n        features[data.type.toLowerCase()] = 1;\n        if (data.acne !== \"Low\") features[\"acne\"] = 1;\n        [\n          \"normal\", \"dry\", \"oily\", \"combination\", \"sensitive\", \"fine lines\", \"wrinkles\", \"redness\", \"dull\", \"pore\", \"pigmentation\", \"blackheads\", \"whiteheads\", \"blemishes\", \"dark circles\", \"eye bags\", \"dark spots\"\n        ].forEach(f => { if (!features[f]) features[f] = 0; });\n        fetch(\"/recommend\", {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            features: features,\n            type: data.type,\n            tone: data.tone,\n          }),\n        })\n          .then((res) => res.json())\n          .then((recData) => {\n            navigate(\"/recs\", { state: { data: recData } });\n          });\n      }\n    })\n    .catch((err) => {\n      console.log(err.message);\n    });\n};\n\nexport const putForm = (features, currType, currTone, navigate) => {\n  console.log(features, currType, currTone, navigate);\n  fetch(\"/recommend\", {\n    method: \"put\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      features: features,\n      type: currType,\n      tone: currTone,\n    }),\n  })\n    .then((res) => res.json())\n    .then((data) => {\n      if (data.error) {\n        console.log(\"Error\");\n      } else {\n        navigate(\"/recs\", { state: { data } });\n        console.log(data);\n      }\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n"]},"metadata":{},"sourceType":"module"}